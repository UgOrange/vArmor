---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: varmorclusterpolicies.crd.varmor.org
spec:
  group: crd.varmor.org
  names:
    kind: VarmorClusterPolicy
    listKind: VarmorClusterPolicyList
    plural: varmorclusterpolicies
    shortNames:
    - vcpol
    singular: varmorclusterpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.policy.enforcer
      name: ENFORCER
      type: string
    - jsonPath: .spec.policy.mode
      name: MODE
      type: string
    - jsonPath: .spec.target.kind
      name: TARGET-KIND
      type: string
    - jsonPath: .spec.target.name
      name: TARGET-NAME
      type: string
    - jsonPath: .spec.target.selector
      name: TARGET-SELECTOR
      type: string
    - jsonPath: .status.profileName
      name: PROFILE-NAME
      type: string
    - jsonPath: .status.ready
      name: READY
      type: boolean
    - jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VarmorClusterPolicy is the Schema for the varmorclusterpolicies
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VarmorPolicySpec defines the desired state of VarmorPolicy
              or VarmorClusterPolicy
            properties:
              policy:
                properties:
                  enforcer:
                    description: 'Enforcer is used to specify which LSM to use for
                      mandatory access control. Available values: AppArmor, BPF, Seccomp
                      (WIP: AppArmorSeccomp, BPFSeccomp)'
                    type: string
                  enhanceProtect:
                    description: EnhanceProtect is used for building a policy for
                      Hardening & AttackProtection & VulMitigation rules from templates.
                    properties:
                      appArmorRawRules:
                        description: AppArmorRawRules is used to set native AppArmor
                          rules, each rule must end with a comma
                        items:
                          type: string
                        type: array
                      attackProtectionRules:
                        description: AttackProtectionRules are used to specify the
                          built-in attack protection rules
                        items:
                          properties:
                            rules:
                              description: Rules is the list of built-in attack protection
                                rules to be used.
                              items:
                                type: string
                              type: array
                            targets:
                              description: Targets are used to specify the workloads
                                to which the policy applies. They must be specified
                                as full paths to executable files, and this feature
                                is only effective when using AppArmor as the enforcer.
                              items:
                                type: string
                              type: array
                          required:
                          - rules
                          type: object
                        type: array
                      bpfRawRules:
                        description: BpfRawRules is used to set native BPF rules
                        properties:
                          files:
                            items:
                              properties:
                                pattern:
                                  description: Pattern can be any string (maximum
                                    length 128 bytes) that conforms to the policy
                                    syntax, used for matching file paths and filenames
                                  type: string
                                permissions:
                                  description: Permissions are used to specify the
                                    file permissions to be disabled.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - pattern
                              - permissions
                              type: object
                            type: array
                          mounts:
                            items:
                              properties:
                                flags:
                                  description: "Flags are used to specify the mount
                                    flags to enforce. They are almost the same as
                                    the 'MOUNT FLAGS LIST' of AppArmor. \n Available
                                    values: \n All Flags: all Command Flags: ro(r,
                                    read-only), rw(w), suid, nosuid, dev, nodev, exec,
                                    noexec, sync, async, mand, nomand, dirsync, atime,
                                    noatime, diratime, nodiratime, silent, loud, relatime,
                                    norelatime, iversion, noiversion, strictatime,
                                    nostrictatime Generic Flags: remount, bind(B),
                                    move(M), rbind(R), make-unbindable, make-private(private),
                                    make-slave(slave), make-shared(shared), make-runbindable,
                                    make-rprivate, make-rslave, make-rshared Other
                                    Flags: umount"
                                  items:
                                    type: string
                                  type: array
                                fstype:
                                  description: Fstype is used to specify the type
                                    of filesystem to enforce. It can be '*' to match
                                    any type.
                                  type: string
                                sourcePattern:
                                  description: SourcePattern can be any string (maximum
                                    length 128 bytes) that conforms to the policy
                                    syntax, used for matching file paths and filenames
                                  type: string
                              required:
                              - flags
                              - fstype
                              - sourcePattern
                              type: object
                            type: array
                          network:
                            properties:
                              egresses:
                                description: Egresses are the list of egress rules
                                  to be applied to restrict particular IPs and ports.
                                items:
                                  properties:
                                    ip:
                                      description: IP defines policy on a particular
                                        IP. If this field is set then neither of the
                                        IPBlock field can be.
                                      type: string
                                    ipBlock:
                                      description: IPBlock defines policy on a particular
                                        IPBlock with CIDR. If this field is set then
                                        neither of the IP field can be.
                                      type: string
                                    port:
                                      description: Port defines policy on a particular
                                        port. If this field is zero or missing, this
                                        rule matches all ports.
                                      type: integer
                                  type: object
                                type: array
                            required:
                            - egresses
                            type: object
                          processes:
                            items:
                              properties:
                                pattern:
                                  description: Pattern can be any string (maximum
                                    length 128 bytes) that conforms to the policy
                                    syntax, used for matching file paths and filenames
                                  type: string
                                permissions:
                                  description: Permissions are used to specify the
                                    file permissions to be disabled.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - pattern
                              - permissions
                              type: object
                            type: array
                          ptrace:
                            properties:
                              permissions:
                                description: "Permissions are used to indicate which
                                  ptrace-related permissions of the target container
                                  should be restricted. Available values: trace, traceby,
                                  read, readby. \n trace, traceby For \"write\" operations,
                                  or other operations that are more dangerous, such
                                  as: ptrace attaching (PTRACE_ATTACH) to another
                                  process or calling process_vm_writev(2). read, readby
                                  For \"read\" operations or other operations that
                                  are less dangerous, such as: get_robust_list(2);
                                  kcmp(2); reading /proc/pid/auxv, /proc/pid/environ,
                                  or /proc/pid/stat; or readlink(2) of a /proc/pid/ns/*
                                  file."
                                items:
                                  type: string
                                type: array
                              strictMode:
                                description: StrictMode is used to indicate whether
                                  to restrict ptrace permissions for all source and
                                  destination processes. Default is false. If set
                                  to false, it restricts ptrace-related permissions
                                  only for processes in other containers. If set to
                                  true, it restricts ptrace-related permissions for
                                  all processes, except those within the init mnt
                                  namespace.
                                type: boolean
                            required:
                            - permissions
                            type: object
                        type: object
                      hardeningRules:
                        description: HardeningRules are used to specify the built-in
                          hardening rules
                        items:
                          type: string
                        type: array
                      vulMitigationRules:
                        description: VulMitigationRules are used to specify the built-in
                          vulnerability mitigation rules
                        items:
                          type: string
                        type: array
                    type: object
                  mode:
                    description: 'Available values: AlwaysAllow, RuntimeDefault, EnhanceProtect,
                      BehaviorModeling, DefenseInDepth'
                    type: string
                  modelingOptions:
                    description: '[Experimental] ModelingOptions is used for the modeling
                      settings.'
                    properties:
                      duration:
                        description: Duration is the duration in minutes to modeling
                        type: integer
                    type: object
                  privileged:
                    description: Privileged is used to identify whether the policy
                      is for the privileged container. Default is false. If set to
                      `nil` or `false`, the EnhanceProtect mode will build enhanced
                      protection rules on top of the RuntimeDefault mode. Otherwise,
                      it will enhance protection on top of the AlwaysAllow mode.
                    type: boolean
                required:
                - enforcer
                - mode
                type: object
              target:
                description: A label query over ArmorProfile that are managed by VarmorPolicy.
                  Must match in order to be controlled. It must match the VarmorPolicy's
                  labels.
                properties:
                  containers:
                    description: Containers are used to specify the names of the protected
                      containers. If it is empty, sandbox protection will be enabled
                      for all containers within the workload (excluding initContainers
                      and ephemeralContainers).
                    items:
                      type: string
                    type: array
                  kind:
                    description: 'Kind is used to specify the type of workloads for
                      the protection targets. Available values: Deployment, StatefulSet,
                      DaemonSet, Pod.'
                    type: string
                  name:
                    description: Name is used to specify a specific workload name.
                      The name field and selector field are mutually exclusive.
                    type: string
                  selector:
                    description: 'LabelSelector is used to match workloads that meet
                      the specified conditions (Note: the type of workloads is determined
                      by the KIND field)'
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - kind
                type: object
            required:
            - policy
            - target
            type: object
          status:
            description: VarmorPolicyStatus defines the observed state of VarmorPolicy
              or VarmorClusterPolicy
            properties:
              conditions:
                description: Conditions
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of ArmorProfile condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: 'Phase is used to indicate the processing phase of the
                  policy. Possible values: Pending, Modeling, Completed, Protecting,
                  Error. (Note: You can find out which varmor-agent has an error by
                  reading the ArmorProfile/status corresponding to the current VarmorPolicy)'
                type: string
              profileName:
                type: string
              ready:
                description: Ready is used to indicate whether the profile of policy
                  is loaded.
                type: boolean
            required:
            - profileName
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
