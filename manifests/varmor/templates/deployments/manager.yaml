apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "varmor.manager.fullname" . }}
  namespace: {{ include "varmor.namespace" . }}
  labels:
    {{- include "varmor.manager.labels" . | nindent 4 }}
spec:
  {{- if not .Values.manager.autoscaling.enabled }}
  replicas: {{ .Values.manager.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "varmor.manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.manager.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "varmor.manager.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.image.password }}
      imagePullSecrets:
        {{- with .Values.imagePullSecrets }}
          {{- toYaml . | nindent 6 }}
        {{- end }}
      {{- end }}
      serviceAccountName: {{ include "varmor.manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.manager.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Values.manager.name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.namespace }}/{{ .Values.manager.image.name }}:{{ .Values.manager.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.manager.image.pullPolicy }}
        command: ["/varmor/vArmor"]
        {{- if or .Values.manager.args .Values.bpfLsmEnforcer.enabled .Values.behaviorModeling.enabled .Values.podServiceEgressControl.enabled .Values.restartExistWorkloads.enabled .Values.bpfExclusiveMode.enabled .Values.metrics.enabled .Values.jsonLogFormat.enabled }}
        args:
          {{- if .Values.manager.args }}
            {{- with .Values.manager.args }}
              {{- toYaml . | nindent 8 }}
            {{- end }}
          {{- end }}
          {{- if .Values.bpfLsmEnforcer.enabled }}
            {{- with .Values.manager.bpfLsmEnforcer.args }}
              {{- toYaml . | nindent 8 }}
            {{- end }}
          {{- end }}
          {{- if .Values.behaviorModeling.enabled }}
            {{- with .Values.manager.behaviorModeling.args }}
              {{- toYaml . | nindent 8 }}
            {{- end }}
          {{- end }}
          {{- if semverCompare ">=1.21.0-0" .Capabilities.KubeVersion.Version }}
            {{- if .Values.podServiceEgressControl.enabled }}
              {{- with .Values.manager.podServiceEgressControl.args }}
                {{- toYaml . | nindent 8 }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.restartExistWorkloads.enabled }}
            {{- with .Values.manager.restartExistWorkloads.args }}
              {{- toYaml . | nindent 8 }}
            {{- end }}
          {{- end }}
          {{- if .Values.bpfExclusiveMode.enabled }}
            {{- with .Values.manager.bpfExclusiveMode.args }}
              {{- toYaml . | nindent 8 }}
            {{- end }}
          {{- end }}
          {{- if .Values.metrics.enabled }}
            {{- with .Values.manager.metrics.args }}
              {{- toYaml . | nindent 8 }}
            {{- end }}
          {{- end }}
          {{- if .Values.jsonLogFormat.enabled }}
            {{- with .Values.jsonLogFormat.args }}
              {{- toYaml . | nindent 8 }}
            {{- end }}
          {{- end }}
        {{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: STATUS_SERVICE_PORT
          value: "{{ .Values.manager.network.statusPort }}"
        - name: WEBHOOK_SERVICE_PORT
          value: "{{ .Values.manager.network.webhookPort }}"
        {{- if .Values.metrics.enabled }}
        - name: METRICS_SERVICE_PORT
          value: "{{ .Values.manager.network.metricsPort }}"
        {{- end }}
        {{- if .Values.auditEventMetadata }}
        - name: AUDIT_EVENT_METADATA
          value: '{{- toJson .Values.auditEventMetadata}}'
        {{- end }}
        ports:
        - name: webhook
          containerPort: {{ .Values.manager.network.webhookPort }}
          protocol: TCP
        - name: status
          containerPort: {{ .Values.manager.network.statusPort }}
          protocol: TCP
        {{- if .Values.metrics.enabled }}
        - name: metrics
          containerPort: {{ .Values.manager.network.metricsPort }}
          protocol: TCP
        {{- end }}
        securityContext:
          {{- toYaml .Values.manager.securityContext | nindent 10 }}
        {{- if .Values.behaviorModeling.enabled }}
        volumeMounts:
          {{- with .Values.manager.behaviorModeling.volumeMounts }}
            {{- toYaml . | nindent 8 }}
          {{- end }}
        {{- end }}
        resources:
          {{- toYaml .Values.manager.resources | nindent 10 }}
      {{- if .Values.behaviorModeling.enabled }}
      volumes:
      {{- if .Values.manager.behaviorModeling.usePersistentVolume }} 
      - persistentVolumeClaim:
          claimName: {{ .Values.manager.behaviorModeling.persistentVolume.claimName }}
        name: {{ .Values.manager.behaviorModeling.persistentVolume.name }}
      {{- else }}
      - emptyDir:
          sizeLimit: {{ .Values.manager.behaviorModeling.emptyDirVolume.sizeLimit }}
        name: {{ .Values.manager.behaviorModeling.emptyDirVolume.name }}
      {{- end }}
      {{- end }}
      {{- with .Values.manager.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.manager.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.manager.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
